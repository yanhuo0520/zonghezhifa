<!DOCTYPE html>
<html>

	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
		<meta name="viewport" content="initial-scale=1.0, user-scalable=no" />
		<meta name="viewport" content="width=device-width,initial-scale=1,minimum-scale=1,maximum-scale=1,user-scalable=no" />
		<link rel="stylesheet" href="../../../../css/mui.min.css" />
		<link rel="stylesheet" href="../../css/common.css" />
		<link rel="stylesheet" href="http://api.map.baidu.com/library/DrawingManager/1.4/src/DrawingManager_min.css" />
		<link rel="stylesheet" href="http://api.map.baidu.com/library/TrafficControl/1.4/src/TrafficControl_min.css" />
		<script type="text/javascript" src="http://api.map.baidu.com/api?v=2.0&ak=NmA1D3Y7HP0A9ZG2A831rsve6SuZKhDz"></script>
		<!--绘制工具-->
		<script type="text/javascript" src="http://api.map.baidu.com/library/TrafficControl/1.4/src/TrafficControl_min.js"></script>
		<!--绘制js-->
		<script type="text/javascript" src="http://api.map.baidu.com/library/DrawingManager/1.4/src/DrawingManager_min.js"></script>
		<!--检测js-->
		<script type="text/javascript" src="http://api.map.baidu.com/library/GeoUtils/1.2/src/GeoUtils_min.js"></script>
		<title>MONITOR_MAP</title>
		<style type="text/css">
			body,
			html,
			#allmap {
				width: 100%;
				height: 100%;
				overflow: hidden;
				font-family: "微软雅黑";
			}

			.infoWindowDiv { width: 220px; height: 160px; }

			.infoWindow-title { font-size: 16px; font-weight: 600; color: #666666; width: 100%; height: 30px; line-height: 30px; text-align: center; border-bottom: 0.5px solid #CCCCCC; }
			.infoWindow-content { margin: 5px 0px; }
			.infoWindow-content div { width: 100%; height: 17px; line-height: 17px; }
			.infoWindow-content div:last-child { width: 100%; height: 25px; line-height: 25px; margin: 5px auto; border-top: 0.5px solid #CCCCCC; border-bottom: 0.5px solid #CCCCCC; }
			.infoWindow-content div span { display: inline-block; font-size: 12px; }
			.infoWindow-leftSpan { color: #2492FC; }
			.infoWindow-middleSpan { color: #777777; font-weight: 650; }
			.infoWindow-rightSpan { color: #4CD964; }
			
			.infoWindow-footer .mui-btn-outlined { height: 35px !important; padding: 2px 8px !important; margin: auto 3px !important; font-size: 14px !important; }
			.infoWindow-footer .mui-btn-primary { color: #2492FC !important; border: 0.6px solid #2492FC !important; }
			
			.second-title, .second-content { display: inline-block; font-size: 14px; }
			.second-title { width: 100px; }
			.second-content { width: 25px; }
			.second-title { color: #A9A9A9; }
			.W700 { font-weight: 700 !important; text-align: right; color: #2492FC !important; padding-right: 15px; }
			.on-line { color: #1ab954; }
			.off-line { color: #A9A9A9; }

			.m-l-12 { margin-left: 12px; }

			/* 去掉文字那行，添加CSS即可 */
			.BMap_cpyCtrl { display: none; }

			/* 去掉地图那行，添加CSS即可 */
			.anchorBL { display: none; }
		</style>
	</head>
	<body>
		<div id="allmap"></div>
	</body>
	<script type="text/javascript" src="../../../../js/mui.min.js"></script>
	<script type="text/javascript" src="../../../../js/jquery-1.12.4.min.js"></script>
	<script type="text/javascript" src="../../js/common.js"></script>
	<script type="text/javascript" src="../../js/streetData.js"></script>
	<script type="text/javascript">
		mui.init({});

		var stop = false;
		//三级（市，区县，街道）直辖市，除此之外的省都是四级（省，市，区县，街道）
		var municipality = ["北京市", "天津市", "上海市", "重庆市", "香港特别行政区", "澳门特别行政区"];
		//最小级zoom，省级zoom
		var ZOOM_PROVINCE_LEVEL = 7;
		//市级zoom
		var ZOOM_CITY_LEVEL = 8;
		//区县级zoom
		var ZOOM_DISTRICT_LEVEL = 11;
		//街道级zoom
		var ZOOM_STREET_LEVEL = 12;
		//缩放最大级别 zoom
		var ZOOM_MAX_LEVEL = 17;
		//当前zoom级别
		var current_zoom = ZOOM_PROVINCE_LEVEL;

		//事件控制变量
		var marker_mouseover_flag = true;
		//省市区县级别
		var LEVEL_PROVINCE = 1;
		var LEVEL_CITY = 2;
		var LEVEL_DISTRICT = 3;
		var LEVEL_STREET = 4;

		var isClicks = false;
		var centers = null;
		var current_center = '116.404,39.915';
		var current_marker = null;
		var current_Level = null;

		var marks = []; //存放地图标记点

		// 百度地图API功能
		var map = new BMap.Map("allmap");
		map.setMinZoom(ZOOM_PROVINCE_LEVEL); //最小zoom缩放级别 省级
		map.setMaxZoom(ZOOM_MAX_LEVEL); //最大zoom缩放级别 道路

		var geolocation = new BMap.Geolocation();

		var myGeolocationIcon = new BMap.Icon("../../images/geolocationIcon.png", new BMap.Size(25, 25), {
			anchor: new BMap.Size(12, 24)
		});

		mui.plusReady(function() {

			geolocation.getCurrentPosition(function(r) {
				if (this.getStatus() == BMAP_STATUS_SUCCESS) {
					current_center = r.point;
					map.centerAndZoom(r.point, 15); //创建中心点与zoom缩放级别 省级
					map.panTo(r.point);
					// 定位成功后 左上角，添加比例尺 (可以避免比例尺控件的初始化样式)
					var scaleCtrl = new BMap.ScaleControl({
						anchor: BMAP_ANCHOR_BOTTOM_RIGHT,
						offset: new BMap.Size(10, 10)
					});
					map.addControl(scaleCtrl);
				} else {
					alert('failed' + this.getStatus());
				}
			}, {
				enableHighAccuracy: true
			});

			// 添加带有定位的导航控件
			var navigationControl = new BMap.NavigationControl({
				// 靠左上角位置
				anchor: BMAP_ANCHOR_TOP_LEFT,
				// LARGE类型
				type: BMAP_NAVIGATION_CONTROL_LARGE,
				// 启用显示定位
				enableGeolocation: true
			});
			map.addControl(navigationControl);

			map.addEventListener("zoomend", function(e) {
				var ZoomNum = map.getZoom();
				map.centerAndZoom(current_center, ZoomNum);
			});

			map.addEventListener("dragend", function showInfo() {
				current_center = map.getCenter();
			});

			// 添加定位控件
			// var geolocationControl = new BMap.GeolocationControl({
			// 	showAddressBar: true,			// 是否显示
			// 	enableAutoLocation: true,		// 首次是否进行自动定位
			// 	locationIcon: myGeolocationIcon // 定位的icon图标  
			// });
			// geolocationControl.addEventListener("locationSuccess", function(e) {
			// 	console.log(JSON.stringify(e.point) );
			// 	// 定位成功事件
			// 	// var address = '';
			// 	// address += e.addressComponent.province;
			// 	// address += e.addressComponent.city;
			// 	// address += e.addressComponent.district;
			// 	// address += e.addressComponent.street;
			// 	// address += e.addressComponent.streetNumber;
			// 	//	alert("当前定位地址为：" + address);
			// });
			// geolocationControl.addEventListener("locationError", function(e) {
			// 	// 定位失败事件
			// 	alert(e.message);
			// });
			// map.addControl(geolocationControl);

			renderLevelFourMap(map, current_center, true);

			createSubview();
		});

		/**
		 * 创建添加“省统计”、“市统计”、“状态图标”等组件的子页面
		 */
		function createSubview() {
			// 创建加载内容窗口
			var topoffset = '8px';
			if (plus.navigator.isImmersedStatusbar()) { // 兼容immersed状态栏模式
				topoffset = (Math.round(plus.navigator.getStatusbarHeight()) + 44) + 'px';
			}
			var wsub = plus.webview.create('maps_map_sub.html', 'sub', {
				top: topoffset,
				left: "60px",
				height: '50px',
				position: 'absolute',
				scrollIndicator: 'none',
				background: 'transparent'
			});
			plus.webview.currentWebview().append(wsub);
		}

		function renderLevelFourMap(map, center, isClick) {
			current_zoom = ZOOM_CITY_LEVEL; 
			//	map.setMapStyle({});
			center = center || map.getCenter();
			isClick = isClick || false;
			map.panTo(center);
			for (var i = 0; i < marks.length; i++) {
				marks[i].marker.hide();
			}
			//清空临时存放的marker，便于回收
			marks = [];
			var geoc = new BMap.Geocoder();
			renderMarkersAndLabels(map, LEVEL_STREET, streetData, null, center, isClick);
			isClicks = isClick;
			centers = center;
			stop = false;

		}

		/**
		 * 渲染标记和标签(重点方法)
		 * @param map map地图对象
		 * @param level 地图级别 1：省级 2：市级 3：区县级
		 * @param data json数据
		 * @param markerClickCallback 标记点击事件方法回调函数
		 * @param center 中心坐标
		 * @param isClick
		 */
		//  renderMarkersAndLabels(map , LEVEL_PROVINCE , data , bindMarkersEvent);
		function renderMarkersAndLabels(map, level, datas, markerClickCallback, center, isClick) {
			//清除之前所有的
			map.clearOverlays();
			// 隐藏当前显示的覆盖物，渲染新的
			for (var i = 0; i < marks.length; i++) {
				marks[i].marker.hide();
			}
			//清空临时存放的marker，便于回收
			marks = [];
			//点击时需要设置zoom级别与定位中心，并将current_zoom置为当前zoom
			if (level != LEVEL_PROVINCE && center) {
			//	console.log(level);
				// 点击切换到下级
				if (level == LEVEL_CITY && isClick) {
					map.setZoom(ZOOM_CITY_LEVEL);
					current_zoom = ZOOM_CITY_LEVEL;
					//将中心点进行重新设置
					map.panTo(center);
				} else if (level == LEVEL_DISTRICT && isClick) {
					map.setZoom(ZOOM_DISTRICT_LEVEL);
					current_zoom = ZOOM_DISTRICT_LEVEL;
					map.panTo(center);
				}
			}
			//1,2,3级地图省略道路，4级地图展示道路
			// 			if (level == LEVEL_STREET) {
			// 
			// 			} else {
			// 				map.setMapStyle({
			// 					styleJson: [{
			// 						"featureType": "road",
			// 						"elementType": "all",
			// 						"stylers": {
			// 							"color": "#ffffff",
			// 							"visibility": "off"
			// 						}
			// 					}]
			// 				});
			// 			}
			for (var i = 0; i < datas.length; i++) {
				(function(num) {
					if (datas[num].position) {
						var x = datas[num].position.split(",")[0];
						var y = datas[num].position.split(",")[1];
						var TXPointArr = [new BMap.Point(y, x)];
						//腾讯坐标系 转化为 百度坐标系
						new BMap.Convertor().translate(TXPointArr, 3, 5, function(data) {
							//标记显示文本
							var labelContent;
							//悬停信息框展示文本
							var windowInfoContent;
							if (level === LEVEL_PROVINCE) {
								labelContent = "<span class='second-title W700'>" + datas[num].provinceName
										+ "</span><br><span class='second-title'>在线车辆数：</span><span class='second-content on-line'>" + datas[num].online 
										+ "</span><br><span class='second-title'>离线车辆数：</span><span class='second-content off-line'>" + datas[num].offline 
										+ "</span><br><span class='second-title'>省内总车辆数：</span><span class='second-content'>" + datas[num].count + "</span>";
							} else if (level === LEVEL_CITY) {
								labelContent = "<span class='second-title W700'>" + datas[num].cityName 
										+ "</span><br><span class='second-title'>在线车辆数：</span><span class='second-content on-line'>" + datas[num].online 
										+ "</span><br><span class='second-title'>离线车辆数：</span><span class='second-content off-line'>" + datas[num].offline 
										+ "</span><br><span class='second-title'>市内总车辆数：</span><span class='second-content'>" + datas[num].count + "</span>";
							} else if (level === LEVEL_DISTRICT) {
								labelContent = "<span class='second-title W700'>" + datas[num].districtName + 
										"</span><br><span class='second-title'>在线车辆数：</span><span class='second-content on-line'>" + datas[num].online 
										+ "</span><br><span class='second-title'>离线车辆数：</span><span class='second-content off-line'>" + datas[num].offline 
										+ "</span><br><span class='second-title'>省内总车辆数：</span><span class='second-content'>" + datas[num].count + "</span>";
							} else if (level === LEVEL_STREET) {
								//监控这个点是否在围栏内,参数为：车牌号，当前位置，状态
								// check(d.vehicleNum,d.position,d.state);
								windowInfoContent = "<div class='infoWindowDiv f-column'>"
									+ "<div class='infoWindow-title'>详细信息</div>"
									+ "<div class='infoWindow-content'>"
									+ "<div class='f-row'><span class='infoWindow-leftSpan'>备案编号：&nbsp;</span><span class='infoWindow-leftSpan'>" + datas[num].recordNo + "</span></div>"
									+ "<div class='f-row'><span class='infoWindow-leftSpan'>最大运载量(t)：&nbsp;</span><span class='infoWindow-leftSpan'>" + datas[num].maximumLoad + "</span></div>"
									+ "<div class='f-row'><span class='infoWindow-leftSpan'>所有者：&nbsp;</span><span class='infoWindow-leftSpan'>" + datas[num].vehicleOwner + "</span></div>"
									+ "<div class='f-row'><span class='infoWindow-leftSpan'>备案地址：&nbsp;</span><span class='infoWindow-leftSpan'>" + datas[num].address + "</span></div>"
									+ "<div class='f-row'><span class='infoWindow-leftSpan'>备案日期：&nbsp;</span><span class='infoWindow-leftSpan'>" + datas[num].fillingDate + "</span></div>"
									+ "<div class='f-row'><span class='infoWindow-leftSpan'>备案机关：&nbsp;</span><span class='infoWindow-leftSpan'>" + datas[num].fillingOffice + "</span></div>"
									+ "<div class='f-row'><span class='infoWindow-leftSpan'>车锁状态：&nbsp;</span><span class='infoWindow-middleSpan'>关闭</span><span class='infoWindow-leftSpan m-l-12'>温度：&nbsp;</span></span><span class='infoWindow-rightSpan'>26℃</span></div>"
									+ "</div>"
									+ "<div class='infoWindow-footer'>"
									+ "<button class='mui-btn mui-btn-primary mui-btn-outlined' style='float: left;' onclick=\"showVedio('" + datas[num].phone + "', '" +datas[num].state + "')\">监控</button>"
									+ "<button class='mui-btn mui-btn-primary mui-btn-outlined' onclick=\"showRoute('" + datas[num].phone+"', '"+datas[num].state + "')\">轨迹</button>"
									+ "<button class='mui-btn mui-btn-primary mui-btn-outlined' onclick=\"waybill('" + datas[num].vehicleNum + "')\">运单</button>"
									+ "</div>"
									+ "</div>"
								labelContent = datas[num].vehicleNum;
							}
							var label;
							var marker;
							//1,2,3级地图选用自定义marker，4级地图选用默认地图，且label也不一样
							if (level !== LEVEL_STREET) {
								marker = new BMap.Marker(new BMap.Point(data.points[0].lat, data.points[0].lng));
								var opts = {
									position: data.points[0] // 指定文本标注所在的地理位置
								};
								label = new BMap.Label(labelContent, opts);
								label.setStyle({
									color: "#2492FC",
									fontSize: "12px",
									fontFamily: "微软雅黑",
									border: "none",
									borderRadius: "4px",
									paddingLeft: "7px",
									paddingRight: "7px",
									paddingTop: "5px",
									paddingBottom: "5px",
									marginTop: "-95px",
									marginLeft: "-60px",
									height: "auto",
									lineHeight: "20px",
									backgroundColor: "rgba(255, 255, 255, .9)",
									maxWidth: 'none'
								});
								marks.push({
									"marker": marker,
									"type": 2
								});
							} else {
								var myIcon = "";
								if (datas[num].state === 1) { //on.png
									myIcon = new BMap.Icon("../../images/ipos_on.png", new BMap.Size(18, 43), {
										anchor: new BMap.Size(10, 21)
									});
									marker = new BMap.Marker(new BMap.Point(data.points[0].lat, data.points[0].lng), {
										icon: myIcon
									});
									marks.push({
										"marker": marker,
										"type": 1
									});
								} else if (datas[num].state === 0) { // off.png
									myIcon = new BMap.Icon("../../images/ipos_off.png", new BMap.Size(18, 43), {
										anchor: new BMap.Size(10, 21)
									});
									marker = new BMap.Marker(new BMap.Point(data.points[0].lat, data.points[0].lng), {
										icon: myIcon
									});
									marks.push({
										"marker": marker,
										"type": 0
									});
								}
								var opts = {
									position: data.points[0], // 指定文本标注所在的地理位置
									offset: new BMap.Size(-10, -15)
								};
								label = new BMap.Label(labelContent, opts);
								label.setStyle({
									color: "#2492FC",
									fontSize: "12px",
									fontFamily: "微软雅黑",
									border: "none",
									borderRadius: "4px",
									paddingLeft: "4px",
									paddingRight: "4px",
									paddingTop: "2px",
									paddingBottom: "2px",
									marginTop: "-15px",
									marginLeft: "-13px",
									height: "auto",
									lineHeight: "20px",
									backgroundColor: "rgba(255, 255, 255, .9)",
									maxWidth: 'none'
								});
							}
							//标记点用于点击事件进入下一级，因此禁止覆盖物在map.clearOverlays方法中被清除
							marker.disableMassClear();
							label.disableMassClear();
							//注册标记鼠标悬停事件，弹出文本框
							if (level !== LEVEL_STREET) {
									if (level == LEVEL_PROVINCE) {
										getBoundaryAndColor(map, datas[num].provinceName);
									} else if (level == LEVEL_CITY) {
										getBoundaryAndColor(map, datas[num].cityName);
									} else if (level == LEVEL_DISTRICT) {
										getBoundaryAndColor(map, datas[num].districtName);
									}
							//	});
							} else {
								marker.addEventListener('click', function(e) {
									marker_mouseover_flag = true;
									var opts = {
										width: 200, // 信息窗口宽度
										height: 215, // 信息窗口高度
										offset: new BMap.Size(20, -30) //信息窗口偏移
									};
									// 创建信息窗口对象
									var infoWindow = new BMap.InfoWindow(windowInfoContent, opts);
									//开启信息窗口
									map.openInfoWindow(infoWindow, e.target.point);
								});
							}
							//初始化标记点击事件
							if (markerClickCallback) {
								markerClickCallback(map, marker, level);
							}
							//记录当前地图级别，用于回退到上一级
							current_Level = level;
							//添加当前坐标覆盖物
							marker.setLabel(label);
							map.addOverlay(marker);
						});
					}
				}(i))
			}
		}

		/**
		 * 设置标记点击事件
		 * @param marker 标记对象
		 * @param markerLevel 标记所在的地图级别
		 */
		function bindMarkersEvent(map, marker, markerLevel) {
			marker.addEventListener('click', function() {
				var _this = $(this);
				var center = new BMap.Point(_this[0].point.lng, _this[0].point.lat);
				current_center = center;
				//显示loading组件
				//	$("#container").mLoading("show");
				if (markerLevel == LEVEL_PROVINCE) {
					renderLevelTwoMap(map, marker, center, true);
				} else if (markerLevel == LEVEL_CITY) {
					renderLevelThreeMap(map, center, true);
				} else if (markerLevel == LEVEL_DISTRICT) {
					renderLevelFourMap(map, center, true);
				}
			});
		}

		/**
		 * 设置标记点击回退事件
		 * @param map
		 * @param marker 标记对象
		 * @param center
		 * @param markerLevel 标记所在的地图级别
		 */
		function goBack(map, marker, center, markerLevel) {
			if (markerLevel == 1) {
				return;
			}
			//显示loading组件
			$("#container").mLoading("show");
			if (markerLevel == LEVEL_STREET) {
				renderLevelThreeMap(map, center, true);
			} else if (markerLevel == LEVEL_CITY) {
				renderLevelOneMap(map, center, true);
			} else if (markerLevel == LEVEL_DISTRICT) {
				center = center || map.getCenter();
				var geoc = new BMap.Geocoder();
				geoc.getLocation(center, function(rs) {
					//获得省份
					var address = rs.addressComponents.province;
					//判断是否属于直辖市
					if ($.inArray(address, municipality) == -1) {
						//返回到市级
						renderLevelTwoMap(map, center, true);
					} else {
						//返回到直辖市
						renderLevelOneMap(map, center, true);
						//重置地图显示级别到省级
						map.setZoom(ZOOM_PROVINCE_LEVEL);
					}
				});
			}
		}

		/**
		 * 添加行政区边框
		 * @param map
		 * @param arg 行政区域名称数组，以百度地图标准行政区域名称为主
		 * @param isAlwaysShow 是否持续显示，默认为false
		 * @param strokeColor 边框线条颜色，填入颜色编码，默认为#ff9a39
		 * @param fillColor 覆盖物背景色，填入颜色编码，默认为无色透明
		 */
		function getBoundaryAndColor(map, arg, fillColor, strokeWeight, strokeColor) {
			strokeColor = "#ff4700";
			fillColor = "#61dcff";
			strokeWeight = 2;
			//通过行政区域名称获取行政区划
			var bdary = new BMap.Boundary();
			bdary.get(arg, function(rs) {
				var count = rs.boundaries.length;
				if (count === 0) {
					return;
				}
				var ply = new BMap.Polygon(rs.boundaries[0], {
					strokeColor: strokeColor,
					fillColor: fillColor,
					strokeWeight: strokeWeight
				});
				map.addOverlay(ply);
			//	$("#container").mLoading("hide");
			//	console.log("look up for problem");
			});
		}

		/**
		 * 获得所有省份信息并渲染省级级（一级）地图
		 * @param map map地图对象
		 */
		function renderLevelOneMap() {
			stop = true;
			map.setZoom(ZOOM_PROVINCE_LEVEL);
			var data = [{
				"position": "113.666994,34.752064",
				"provinceName": "河南省",
				"online": '4',
				"offline": '4',
				"count": "8",
				state: 1
			}];
			renderMarkersAndLabels(map, LEVEL_PROVINCE, data, bindMarkersEvent);
		}

		//逆向解析省级坐标并渲染该省的市级（二级）地图
		function renderLevelTwoMap(map_s, marker, center, isClick) {
			stop = true;
			map = map_s || map;
			map.setZoom(ZOOM_CITY_LEVEL);
			center = center || map.getCenter();
			isClick = isClick || false;
			var geoc = new BMap.Geocoder();
			geoc.getLocation(center, function(rs) {
				//获得省份
				var address = rs.addressComponents.province;
				//判断是否属于直辖市，来选择进入到市级还是县级地图
				if ($.inArray(address, municipality) == -1) {
					//调用后台接口获取城市数据cityData
					var cityData = [{
						"position": "113.666994,34.752064",
						"cityName": "郑州市",
						"online": '16',
						"offline": '9',
						"count": "25",
						state: 1

					}];
					if (cityData != "") {
						renderMarkersAndLabels(map, LEVEL_CITY, cityData, bindMarkersEvent, center, isClick);
					} else {
						alert("下级无数据！");
						marker.show();
					}
				} else {
					//直辖市到进入第三级处理
					renderLevelThreeMap(map, center, isClick);
				}
			});
		}

		//逆向解析市级坐标并渲染该市的区县级（三级）地图
		function renderLevelThreeMap(map, center, isClick) {
			stop = true;
			center = center || map.getCenter();
			isClick = isClick || false;
			var geoc = new BMap.Geocoder();
			geoc.getLocation(center, function(rs) {
				//获得市级
				var address = rs.addressComponents.city;
				//调用后台接口获取区县数据DistrictData
				var DistrictData = [{
					"position": "113.735265,34.420167",
					"districtName": "新郑市",
					"online": '16',
					"offline": '9',
					"count": "25",
					state: 1

				},{
					"position": "114.021577,34.727622",
					"districtName": "中牟县",
					"online": '0',
					"offline": '1',
					"count": "1",
					state: 1

				}];
				renderMarkersAndLabels(map, LEVEL_DISTRICT, DistrictData, bindMarkersEvent, center, isClick);
			});
		}
		
		/**
		 * 查看车辆监控设备
		 * @param phone 车辆设备移动号码
		 * @param state 车辆设备状态
		 */
		function showVedio(phone, state) {
			mui.toast("暂无该设备监控视频数据包！");
		}
		
		/**
		 * 查看车辆监控设备
		 * @param phone 车辆设备移动号码
		 * @param state 车辆设备状态
		 */
		function showVedio(phone, state) {
			mui.toast("暂无 " + phone + " 设备监控视频数据包！");
		}
		
		/**
		 * 查看以往轨迹信息
		 * @param phone 车辆设备移动号码
		 * @param state 车辆设备状态
		 */
		function showRoute(phone, state) {
			openNewWebView("TransportRoute.html", "TransportRoute.html", {}, {
				phone: phone
			})
		}
		
		/**
		 * 查看车辆运单
		 * @param vehicleNum 车辆设备移动号码
		 */
		function waybill(vehicleNum) {
			openNewWebView("information.html", "information.html", {}, {
				type: "运单",
				vehicleNum: vehicleNum
			})
		}
	</script>
</html>
